{
    "lecciones":{
        "intro":{
            "estructura":"Estructura del programa:\n          \n    1. Lecciones: Aquí podrás aprender todo sobre los cifrados más comunes e importantes desde una perspectiva más accesible, en vez de matemática.\n                  En las lecciones encontrarás un poco de historia, teoría con una demostración práctica y un reto final para porerlo en práctica.\n    2. Retos: En este apartado, hay retos que puedes intentar usando lo que has aprendido en el apartado de Lecciones.\n    3. Máquina: En la máquina se encuentran todos los cifrados para poder encriptar o desencriptar mensajes si se conocen los datos necesarios.",
            "historia":"Historia De La Criptografía\n          \n    La criptografía es tan antigua como la necesidad de comunicación en secreto. \n    Desde los tiempos de Julio César, quien usaba un sistema de cifrado por sustitución para proteger sus mensajes, \n    hasta los jeroglíficos del Egipto faraónico que ocultaban significados solo conocidos por unos pocos, la criptografía ha tenido un papel fundamental en la historia.\n\n    Durante la Segunda Guerra Mundial, la criptografía alcanzó un punto crucial. \n    La máquina Enigma, utilizada por Alemania para enviar mensajes codificados, fue descifrada por los aliados (con Alan Turing), \n    lo que contribuyó significativamente al resultado de la guerra. \n\n    Hoy en día, la criptografía sigue evolucionando con la tecnología digital, asegurando que la comunicación privada,\n    desde correos electrónicos hasta transacciones bancarias, permanezca segura y confidencial.",
            "recomendacion":"Recomendación:\n          \n    Empezar por los cifrados clásicos (en orden) para entender en que se basa la criptografía.\n        \n    Luego, ya entendidos los cifrados clásicos, ¡podrás adentrarte en el mundo de la criptografía simétrica y asimétrica!\n          \n    La criptografía es difícil de entender, pero es preciosa una vez entiendes diferentes partes de ella.\n    Por ello, ¡¡¡no perdamos más tiempo en la introducción y a comenzar!!!"
        },
        "clasicos":{
                "cesar":{
                "teoria":"Este cifrado es un cifrado de sustitución, es decir, sustituye (de forma constante) una letra por otra:\n\n    Para encriptar y desencriptar el mensaje era necesaria una llave numérica, que shiftee el abecedario.\n    Por ejemplo: key (llave) = 5\n\n    key = 5\n    abecedario original:  [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]\n    abecedario shifteado: [f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e]\n\n    En este ejemplo: la 'a' se encriptaría --> f\n                     la 'b' se encriptaría --> g\n                     la 'c' se encriptaría --> h\n                     ...\n                     la 'z' se encriptaría --> e",
                "historia": "Historia Del Cifrado César\n\n    Aunque no es el primer cifrado de la historia, se considera uno de los cifrados más importantes historicamente.\n\n    El cifrado se usaba para poder mandar mensajes entre divisiones del ejército de forma segura.",
                "ejemplo":"Ejemplo: vamos a encriptar \"Hola Mundo!\" con key (llave) = 5.\n\n        Nota: las mayúsculas se transforman en minúsculas para encriptar, y cualquier símbolo fuera del abecedario se mantiene en la posición en la que está en el texto original.\n\n        \"Hola Mundo!\" --> \"mtqf rzsit!\" (llave = 5)\n\n    Para desencriptar el mensaje con llave 5:\n\n        Cogemos el abecedario original: [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]\n        y shifteamos el abecedario:     [f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e]\n\n        Ahora, en vez de coger las letras del abecedario original y pasarlas al abecedario shifteado, como se hace en la encripción,\nmetemos el texto encriptado en el abecedario shifteado y sacamos las letras correspondientes del abecedario original.\n\n        \"m\" --> \"h\"\n        \"t\" --> \"o\"\n        \"q\" --> \"l\"\n        \"f\" --> \"a\"\n        ...\n        \"t\" --> \"o\"\n        \"!\" --> \"!\"\n\n        \"mtqf rzsit!\" --> \"hola mundo!\"",
                "reto":"imagina que estás en la época romana, el aire está impregnado con el polvo y el clamor de la batalla.\n                Eres un soldado leal al gran general Pompeyo.\n                En medio del caos, interceptas un mensaje de tu adversario, Julio César, destinado a sus legiones.\n                Sabes que descifrar su contenido podría cambiar el curso de la guerra y potencialmente llevar a tu lado a la victoria.\n                El mensaje está codificado con un método desconocido para muchos, pero tú has oído rumores sobre este tipo de cifrado:\n                El cifrado César, un ingenioso sistema de desplazamiento que el propio César utiliza para comunicarse con sus generales.\n                Descifrarlo podría ser la clave para anticipar sus movimientos y asegurar la gloria para Pompeyo y para Roma.\n\n                Junto al mensaje encriptado encuentras una nota, en la que pone: VIII\n\n                El mensaje encriptado:\n                \"tmoqwv bzma, uwdquqmvbw qvumlqibw pikqi tia kwtqvia lm xpizaitca. zmncmzhw vmkmaizqw mv mt ntivkw lmzmkpw xizi mvdwtdmz it mvmuqow. uivbmvoiv ti nwzuikqwv lm bmabclw piabi ti amvit lm ibiycm. dqkbwzqi maxmzi.\"\n,            ¿Usando la máquina del Cifrado César crees que puedes interceptar el mensaje?"
            },
            "vigenere":{
                "historia":"Historia Del Cifrado Vigènere\n\n            El cifrado Vigenère, atribuido al francés Blaise de Vigenère en el siglo XVI, representa una evolución del cifrado por sustitución.\n\n            A pesar de su complejidad, que le valió el título de \"cifrado indescifrable\",\n            fue finalmente descifrado en el siglo XIX gracias a los avances en el análisis de frecuencias.\n\n            Breve explicación: el análisis de frecuencias permite, con gran complejidad matemática,\n            asociar ciertas letras encriptadas a letras del abecedario original para desencriptar el mensaje.",
                "teoria_1":"Teoría\n\n            Este cifrado es un cifrado de sustitución más avanzado que el Cifrado César.\n\n            A diferencia del cifrado César que utiliza un desplazamiento fijo,\n            el cifrado Vigenère emplea una clave de palabra que corresponde a múltiples desplazamientos a lo largo del mensaje.\n            Esto significa que la letra a ser sustituida en el mensaje depende de la letra correspondiente de la clave.\n\n            Para encriptar/desencriptar el mensaje, se necesita una contraseña:\n            Por ejemplo: key (llave) = KEY\n\n            Primero se repite la llave hasta que tenga la misma longitud que el texto que se va a encriptar/desencriptar:\n\n            Clave repetida:       keykeykeykeykeykey\n            Mensaje original:     atacar al amanecer\n            Abecedario original: [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]\n\n            Para encriptar el mensaje:\n            Desplazamos cada letra del mensaje un número de posiciones en el alfabeto igual al valor (índice) de la letra correspondiente de la clave en el alfabeto.\n\n            Así que, con nuestra clave 'KEY' y mensaje: \"atacar al amanecer\":\n                                                                            _                                     _\n                                                     abecedario original:  [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]\n                                                                            _\n                    K --> 11 posiciones adelante --> abecedario shifteado: [k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d,e,f,g,h,i,j] --> k\n                                                                                                                  _\n                    E --> 5 posiciones adelante  --> abecedario shifteado: [e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,a,b,c,d] --> x\n                                                                            _\n                    Y --> 25 posiciones adelante --> abecedario shifteado: [y,z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x] --> y\n\n            Mensaje encriptado: kxymep kp ywelogcb",
                "teoria_2":"También se puede usar la matriz del Cifrado Vigènere:\n\n                                                            TEXTO\n                a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z |\n            -----------------------------------------------------------------------------------------------------------\n            a : a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z |\n            b : b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a |\n            c : c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b |\n            d : d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c |\n            e : e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d |\n            f : f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e |\n            g : g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f |\n            h : h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g |\n            i : i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h |\n            j : j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i |\n            k : k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j |\n            l : l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k |\n   LLAVE    m : m | n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l |\n            n : n | o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m |\n            o : o | p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n |\n            p : p | q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o |\n            q : q | r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p |\n            r : r | s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q |\n            s : s | t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r |\n            t : t | u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s |\n            u : u | v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t |\n            v : v | w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u |\n            w : w | x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v |\n            x : x | y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w |\n            y : y | z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x |\n            z : z | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y |\n\n    Para usar la matriz tienes que ir letra por letra mirando primero la fila de la LLAVE y cogiendo la columna de TEXTO, sacas la letra encriptada.\n    Con el ejemplo anterior:\n\n    Llave =   keykeykeykeykeykey\n    Mensaje = atacar al amanecer\n\n    fila k, columna a --> k\n    fila e, columna t --> x\n    fila y, columna a --> y\n\n    ...\n    fila y, columna r --> p\n\n    Mensaje encriptado: kxymep ej ekkrcmip",
                "teoria_3":"Para no tener que crear una matriz cada vez que vayamos a encriptar/desencriptar, podemos usar un truco:\n\n            El truco consiste en sumar (restar si se desencripta) los índices de la letra del texto y de la letra de la llave, hacer su módulo 26 y eso dará un número entre 0 y 25.\n            Este número será el índice de la letra encriptada/desencriptada.\n            Los índices de todas las letras (incluyendo llave) se cogerán respecto al abecedario.\n\n            Usando el ejemplo anterior:\n\n            Llave =   keykeykeykeykeykey\n            Mensaje = atacar al amanecer\n\n            indíce texto + índice llave --> índice encriptado\n               (a) 0     +   (k) 10     -->   (k) 10\n               (t) 19    +   (e) 4      -->   (x) 23\n               (a) 0     +   (y) 24     -->   (y) 24\n               (c) 2     +   (k) 10     -->   (m) 12\n               (a) 0     +   (e) 4      -->   (e) 4\n               ...\n               (r) 17    +   (y) 24     -->   (k) 41 (hacemos el módulo 26) --> (p) \"15\n\n            Mensaje encriptado: kxymep ej ekkrcmip\n\n            Ahora vamos a desencriptarlo:\n\n            índice encriptado - índice llave --> índice texto\n                (k) 10        -    (k) 10    -->    (a) 0\n                (x) 23        -    (e) 4     -->    (t) 19\n                (y) 24        -    (y) 24    -->    (a) 0\n                (m) 12        -    (k) 10    -->    (c) 2\n                (e) 4         -    (e) 4     -->    (a) 0\n                ...\n                (p) 41        -    (y) 24    -->    (r) 17      o bien     (p) 15 - (y) 24 --> (r) -9  (se cuenta desde atrás)\n            Mensaje dseencriptado: atacar al amanecer",
                "ejemplo":"Mensaje: \"Hola Mundo!\"\n            Llave: \"hola\"\n\n            Primero vamos a encriptar el mensaje usando el truco:\n                llave  +   letra  --> letra encriptada\n                h (7)  +   h (7)  -->   o (14)\n                o (14) +   o (14) -->   c (28) --> c (2)\n                l (11) +   l (11) -->   w (22)\n                a (0)  +   a (0)  -->   a (0)\n                h (7)  +          -->   \n                o (14) +   m (12) -->   a (0)\n                l (11) +   u (20) -->   f (31) --> f (5)\n                a (0)  +   n (13) -->   n (13)\n                h (7)  +   d (3)  -->   k (10)\n                o (14) +   o (14) -->   c (28) --> c (2)\n                l (11) +   !      -->   !\n\n                Mensaje encriptado: ocwa afnkc!\n\n            Ahora vamos a desencriptarlo sabiendo la llave: \"hola\" (también veremos que da igual el orden de la resta ya que el índice puede ser negativo también)\n                  letra encriptada   -   llave  --> letra desencriptada\n                      o (14)         -   h (7)  -->         h (7)\n                      c (2)          -   o (14) -->         o (-12)\n                      w (22)         -   l (11) -->         l (11)\n                      a (0)          -   a (0)  -->         a (0)\n                                     -   h (7)  -->        \n                      a (0)          -   o (14) -->         m (-14)\n                      f (5)          -   l (11) -->         u (-6)\n                      n (13)         -   a (0)  -->         n (13)\n                      k (10)         -   h (7)  -->         d (3)\n                      c (2)          -   o (14) -->         o (-12)\n                      !              -   l (11) -->         !\n\n                Mensaje desencriptado: hola mundo!",
                "reto":"Reto Con Máquina:\n\n            Imagina que has interceptado un mensaje cifrado durante una misión de espionaje. Sabes que el mensaje ha sido cifrado usando la clave \"VIGENERE\".\n            Sin embargo, el mensaje es confuso y necesitas descifrarlo para completar tu misión con éxito.\n\n            Aquí está el texto cifrado:\n\n            \"xqze wvgmmze ec vugrrgvv mt bpu wzohti. zavieie hiy vrjxmcigvsein.\"\n\n            ¿Puedes descifrar el mensaje completo?"
            },
            "rail_fence":{
                "historia":"Historia Del Cifrado Rail Fence:\n\n            El cifrado Rail Fence, conocido también como cifrado de valla o zigzag, se destaca por su simplicidad.\n\n            Es un cifrado de trasposición, que, en este cifrado, funciona reorganizando las letras en un patrón de zigzag.\n\n            No se sabe el origen específicio, pero se sabe que era un sistem fácil de usar sin necesidad de herramientas complejas.",
                "teoria":"Teoría\n\n            Es un cifrado más simple que los anteriores, pero entenderlo puede ser algo abstracto.\n\n            El cifrado Rail Fence es notablemente más simple que otros métodos de cifrado, como el César o el Vigenère.\n            Este cifrado no se basa en la sustitución de letras, sino en su reorganización a través de un patrón de zigzag.\n            Imagina que las letras de tu mensaje se colocan a lo largo de las tablas de una valla imaginaria, zigzagueando hacia arriba y hacia abajo.\n\n            El texto cifrado se forma entonces leyendo las letras línea por línea.\n            Este patrón crea un efecto de mezcla que desordena su secuencia original, haciéndolo menos obvio para un observador no autorizado.\n\n            Aunque es un cifrado simple y no ofrece un nivel de seguridad tan alto como otros métodos más complejos,\n            el Rail Fence es eficaz para ocultar mensajes en un contexto donde la velocidad y la facilidad de cifrado/descifrado son prioritarias.",
                "ejemplo":"Ejemplo:\n\n            texto = \"Hola Mundo!\"\n            railes = 4\n\n            Vamos a escribir el texto en los railes:\n\n            h     u\n             o   m n\n              l     d !\n               a     o\n\n            Al leer fila por fila:\n            El texto encriptado es: huomnl d!ao\n\n            Para desencriptar:\n\n            Primero colocamos creamos unos placeholders:\n\n            *     *     *...\n             *   * *   *\n              * *   * *\n               *     *\n\n            Luego colocamos fila por fila las letras (al saber la longitud de la cadena podemos saber donde cortar los placeholders):\n            Es decir, el ejemplo de placeholders anterior sería incorrecto por lo que ajustamos sabiendo que el número de * debe ser igual que la longitud del texto:\n\n            *     *                                 h     u\n             *   * *                                 o   m n\n              * *   * *      -->   y lo rellenamos:   l     d !\n               *     *                                 a     o\n\n            Luego volvemos a leerlo en el orden de zigzag:\n\n            El texto desencriptado: \"hola mundo!\"",
                "reto":"Reto\n\n            Imagina que eres un detective en una operación encubierta y has interceptado un mensaje cifrado que podría ser clave para tu investigación.\n            El mensaje ha sido codificado utilizando el cifrado Rail Fence.\n            Sin embargo, el remitente ha sido astuto y ha utilizado un número de raíles (líneas) que no conoces.\n\n            El texto cifrado es el siguiente: \"eeoco mllaenunr ert ne ulea mncrctseele ae\"\n\n            Tu misión es descifrar este mensaje.\n            Sabes que el Rail Fence implica reorganizar las letras en un patrón de zigzag, pero sin conocer el número exacto de raíles,\n            tendrás que probar diferentes posibilidades.\n\n            Piensa en cómo las letras podrían estar distribuidas y cómo se leerían en líneas horizontales para revelar el mensaje oculto.\n\n            ¿Puedes descifrar el mensaje y descubrir cuántos raíles se utilizaron?\n\n            Puedes hacerlo manualmente o usando la máquina."
            }
        },
        "simetricos":{
            "aes":{
                "historia":"Historia Del Cifrado AES\n\n                El Advanced Encryption Standard (AES), desarrollado por los criptógrafos belgas Vincent Rijmen y Joan Daemen,\n                fue adoptado en 2001 por el Instituto Nacional de Estándares y Tecnología de EE. UU. como el sucesor del Data Encryption Standard (DES).\n\n                AES se destacó por su seguridad y eficiencia en distintos dispositivos, operando con claves de 128, 192 y 256 bits (la máquina AES del programa funciona con AES-256 (256 bits)).\n\n                Hoy en día, es ampliamente usado para proteger información digital a nivel mundial, siendo un pilar fundamental de la criptografía moderna.",
                "teoria":"Teoría\n\n                ¿Qué es AES?\n                    El Advanced Encryption Standard (AES) es un algoritmo de cifrado utilizado para proteger datos.\n                    Es un estándar global para la seguridad de la información, especialmente en la transmisión y almacenamiento de datos digitales.\n\n                ¿Cómo Funciona?\n                    AES es un cifrado simétrico, lo que significa que utiliza la misma clave para cifrar y descifrar datos.\n                    Funciona transformando los datos originales (texto plano) en una versión indescifrable (texto cifrado) mediante una serie de pasos bien definidos.\n\n                Pasos Clave del AES:\n\n                1. Sustitución de Bytes: Cada byte de datos se reemplaza por otro según una tabla predefinida.\n                2. Cambio de Filas: Se reorganizan las filas de datos para mezclar el contenido.\n                3. Mezcla de Columnas: Similar al paso anterior, pero se mezclan las columnas de datos.\n                4. Adición de Clave: Se combina la clave de cifrado con los datos.\n\n                Estos pasos se repiten en varias rondas (10, 12 o 14 rondas, dependiendo del tamaño de la clave: 128, 192 o 256 bits, respectivamente).\n\n                Claves de Cifrado:\n                    La seguridad de AES depende de la clave utilizada.\n                    Las claves pueden ser de 128, 192 o 256 bits, siendo más largas más seguras pero también más lentas en el proceso de cifrado y descifrado.\n\n                ¿Por Qué es Seguro?\n                    La seguridad de AES reside en su complejidad y en el número de transformaciones que se realizan.\n                    Es resistente a muchos tipos de ataques criptográficos debido a su estructura bien diseñada.\n\n                Aplicaciones de AES:\n                    AES se usa en una amplia variedad de aplicaciones:\n                    Desde asegurar transacciones financieras y proteger comunicaciones gubernamentales hasta cifrar mensajes en aplicaciones de mensajería como WhatsApp.",
                "ejemplo_encrypt":"Ejemplo\n\n    1. Preparación de Datos y Clave:\n\n        Mensaje original: \"Hola Mundo!\"\n        Clave de cifrado: \"ContraseñaSegura123\"\n        El mensaje se organiza en un bloque de datos y la clave se expande para las rondas de cifrado.\n\n    2. Rondas de Cifrado:\n\n        AES-256 utiliza 14 rondas de cifrado. Cada ronda consta de varios pasos:\n        Sustitución de Bytes (SubBytes): Cada byte del mensaje se sustituye por otro de acuerdo con una tabla de sustitución.\n        Cambio de Filas (ShiftRows): Las filas del bloque se reorganizan para mezclar los datos.\n        Mezcla de Columnas (MixColumns): Cada columna del bloque se combina de manera compleja para aumentar la difusión.\n        Adición de Clave (AddRoundKey): La clave expandida se combina con el bloque de datos.\n\n    3. Resultado del Cifrado:\n\n        El texto original se transforma en un texto cifrado completamente diferente:\n        Texto cifrado: 98e4751a9396430143c883e2b8d617b74e1f8176740208309bb337f611386be57b5bb400839eb3e395bbeadeedaa36fc",
                "ejemplo_decrypt":"\n    1. Inicio del Descifrado:\n\n     Texto cifrado: 98e4751a9396430143c883e2b8d617b74e1f8176740208309bb337f611386be57b5bb400839eb3e395bbeadeedaa36fc\n       Clave de descifrado: \"ContraseñaSegura123\"\n\n    2. Preparación de la Clave:\n\n     La clave \"ContraseñaSegura123\" se expande generando varias subclaves para su uso en cada una de las 14 rondas de descifrado.\n\n    3. Rondas de Descifrado:\n\n      El proceso de descifrado también consiste en 14 rondas, pero en orden inverso al cifrado:\n     Adición de Clave (AddRoundKey): Combinar el bloque de texto cifrado con una subllave de descifrado.\n Inversión de Mezcla de Columnas (InvMixColumns): Operación inversa a MixColumns para deshacer la mezcla.\n    Inversión de Cambio de Filas (InvShiftRows): Reordenar las filas a su posición original.\n      Inversión de Sustitución de Bytes (InvSubBytes): Revertir la sustitución de bytes usando la tabla inversa.\n\n    4. Resultado del Descifrado:\n\n    Después de completar todas las rondas, el texto cifrado se convierte de nuevo en el mensaje original:\n       Mensaje descifrado: \"Hola Mundo!\"",
                "reto":"Reto\n\n    Eres un agente de una agencia de inteligencia que ha interceptado un mensaje cifrado de un espía. \n    Se cree que el mensaje contiene la ubicación de una reunión secreta. \n    Sin embargo, la clave para descifrar el mensaje está oculta en el propio mensaje cifrado.\n\n    Texto encriptado: ae41a11c78642f6103220205c822bc16c6172f71c05b30b0b4eee805e739310be8be1830a47b8aae12c1dd8c22f397c078e103be4a536328708e4fe0c4f6f04c63cb2da16a58819d6201f1f3d4b55514e4acba7cf53924f7ad181d4bed3548f780675ffe1b844cb6f8ddcfa0fa5f4a2e\n\n    El espía siempre usa una palabra clave relacionada con su misión como clave de cifrado. \n    Sabemos que el espía ha cifrado la clave en un cifrado, posiblemente César.\n\n    Adjunto al mensaje cifrado aparece este texto: geji\n\n    ¿Puede qué el número de shifts esté relacionado a la longitud de la clave?"
            },
            "des":{
                "historia":"Historia Del Cifrado DES\n\n    Desarrollado en los años 70 por IBM y la NSA, el Data Encryption Standard (DES) fue el estándar federal de EE. UU. para cifrado desde 1977.\n\n    Utilizando una clave de 56 bits, DES fue ampliamente empleado en la protección de información no clasificada.\n\n    Con el tiempo, debido a limitaciones de seguridad, fue reemplazado por el más avanzado AES en 2001, marcando una evolución significativa en la criptografía moderna.",
                "teoria":"Teoría\n\n    ¿Qué es DES?\n        El Data Encryption Standard (DES) es un algoritmo de cifrado desarrollado en los años 70. \n        Fue uno de los primeros estándares para la protección de información digital, especialmente en el gobierno y las industrias.\n\n    ¿Cómo Funciona?\n        DES es un cifrado simétrico, lo que significa que utiliza la misma clave para cifrar y descifrar datos. \n        Opera transformando los datos originales (texto plano) en texto cifrado a través de una serie de pasos específicos.\n\n    Pasos Clave del DES:\n\n    1. Permutación Inicial: Se reorganizan los bits del texto según una tabla fija.\n    2. Rondas de Cifrado: DES realiza 16 rondas de cifrado. Cada ronda incluye:\n        · Expansión: Se expanden los bits de datos para prepararlos para la mezcla con la clave.\n        · Mezcla con la Subclave: Se combina con una subclave generada de la clave principal.\n        · Sustitución: Los bits se reemplazan según una tabla de sustitución.\n        · Permutación: Se reorganizan los bits nuevamente.\n    3. Permutación Final: Una última reorganización de los bits para obtener el texto cifrado.\n\n    Claves de Cifrado:\n        DES utiliza una clave de 56 bits, lo que en su momento ofrecía un nivel adecuado de seguridad. S\n        in embargo, con el tiempo, esta longitud de clave se volvió vulnerable a ataques.\n\n    ¿Por Qué Fue Seguro?\n        DES fue considerado seguro debido a su complejidad y al número de transformaciones que realiza. \n        Sin embargo, la seguridad de DES se debilitó con el aumento de la potencia de cómputo y técnicas de ataque más sofisticadas.\n\n    Aplicaciones de DES:\n        A pesar de ser reemplazado por AES, DES fue ampliamente utilizado en la protección de transacciones financieras, \n        comunicaciones gubernamentales y sistemas de información corporativos.",
                "ejemplo_encrypt":"Ejemplo\n\n    1. Preparación de Datos y Clave:\n\n        Mensaje original: \"Hola Mundo!\"\n        Clave de cifrado: \"ClaveDES123\"\n        El mensaje se organiza en un bloque de datos (64 bits) y la clave se procesa para su uso en las rondas de cifrado.\n\n    2. Rondas de Cifrado:\n\n        DES utiliza 16 rondas de cifrado. Cada ronda consiste en varios pasos:\n        \n            1. Expansión: Se expanden los bits de datos para prepararlos para la mezcla con la clave.\n            2. Mezcla con la Subclave: Se combina con una subclave generada de la clave principal.\n            3. Sustitución (S-Box): Los bits expandidos se reemplazan según tablas de sustitución.\n            4. Permutación: Se reorganizan los bits para prepararlos para la siguiente ronda.\n\n    3. Resultado del Cifrado:\n\n        El proceso de cifrado transforma el texto original en un texto cifrado completamente diferente. \n        Texto cifrado: \"057744eee2602362f0654b783ed99bd56c0a97a634a20af0\"",
                "ejemplo_decrypt":"    \n    1. Preparación de Datos y Clave:\n\n        Texto cifrado: \"057744eee2602362f0654b783ed99bd56c0a97a634a20af0\"\n        Clave de cifrado: \"ClaveDES123\" \n        El texto cifrado se organiza en un bloque de datos (64 bits) y la clave se procesa para su uso en las rondas de descifrado.\n\n    2. Rondas de Descifrado:\n\n        DES utiliza 16 rondas de descifrado, que son básicamente el proceso de cifrado pero en orden inverso. Cada ronda consiste en varios pasos:\n        \n            1. Mezcla con la Subclave: Se combina el bloque con una subclave, que es la misma utilizada en la ronda correspondiente del proceso de cifrado, pero aplicada en orden inverso.\n            2. Inversión de Permutación: Los bits se reorganizan para revertir la última permutación del proceso de cifrado.\n            3. Inversión de Sustitución (S-Box Inversa): Se revierte la sustitución de los bits utilizando tablas de sustitución inversa.\n            4. Inversión de Expansión: Se devuelve el bloque a su tamaño original, revirtiendo la expansión realizada durante el cifrado.\n        \n    3. Resultado del Descifrado:\n\n        Después de completar las 16 rondas, el texto cifrado se transforma de nuevo en el mensaje original:\n        Mensaje descifrado: \"Hola Mundo!\"",
                "reto":"Reto\n\n    Eres un aventurero que ha encontrado un antiguo cofre del tesoro. \n    Dentro del cofre, hay un mensaje cifrado que se cree contiene la ubicación de un tesoro escondido. \n    La clave para descifrar el mensaje, sin embargo, es un misterio.\n\n    Junto al mensaje cifrado, encuentras un viejo medallón con símbolos que parecen indicar una secuencia numérica. \n    La clave del cifrado DES podría estar basada en esta secuencia numérica.\n\n    Medallón:\n                   \n                            ,-----.     \n                        .'  .-,  '.   \n                        / ,-.| 8\\ _ \\  \n                        ;  \\  '_ / 4|: \n                        |  _`,/ \\ _/  | \n                        : (3 '\\_/ \\   ; \n                        \\ `\"/  \\ 1) /  \n                        '. \\_/``\".'   \n                            '-----'     \n                \n    El mensaje cifrado:\n\n    a63d4a413f58f076a84c7a4053f7430aab7e1068b2cb19c1e531b2f943db02a92d81479e6d3ad2fa541f5d67c6c104f5214451c9769fda54aec1e922db1fd992493b6c32e8c25d151eaf18f3e1ae2ee60f6b698eb0e4bea477009fae03d2a2db9ecc79e7604d8bc36f9d8cd236b35623"
            }

        },
        "asimetricos":{
            "rsa":{
                "historia":"Historia Del Cifrado RSA\n\n    RSA, nombrado por sus creadores Ron Rivest, Adi Shamir y Leonard Adleman, fue presentado en 1977. \n\n    Representó un avance monumental al introducir la criptografía de clave pública, permitiendo el cifrado y la autenticación seguros sin compartir claves secretas. \n    \n    Su uso generalizado en seguridad digital lo convierte en uno de los pilares de la criptografía moderna.",
                "teoria":"Teoría\n\n    Nota\n        Esta teoría requiere algo de conocimiento matemático. Si no entiendes la parte matemática, puedes buscarlo o intentar seguir la teoría quitando las matemáticas.\n        Recuerda también que no hay una necesidad de saber matemáticasa para poder hacer criptografía, solamente es una herramienta útil.\n\n    ¿Qué es RSA?\n        RSA es un algoritmo de criptografía asimétrica que utiliza un par de claves: una pública para cifrar y una privada para descifrar. \n        Es esencial en la seguridad digital para tareas como cifrado de datos y firma digital.\n\n    ¿Cómo Funciona?\n        RSA se basa en el principio matemático de que es fácil multiplicar dos números primos grandes para obtener un producto N, \n        pero extremadamente difícil realizar el proceso inverso (factorización).\n\n    Pasos Clave del RSA:\n\n    1. Generación de Claves: \n        · Se seleccionan dos números primos grandes y se calcula su producto N y la función totiente de Euler phi(N). \n        · Luego se elige un número entero e que sea coprimo con phi(N) y menor que este. \n        · La clave pública es (N, e) y la clave privada se deriva de estos valores.\n    2. Cifrado: \n        · Para cifrar un mensaje, se convierte en un número menor que N y luego se eleva a la potencia e módulo N.\n    3. Descifrado: \n        · El mensaje cifrado se eleva a la potencia de la clave privada módulo N, recuperando el mensaje original.\n\n    Seguridad de RSA:\n        La seguridad de RSA reside en la dificultad de factorizar el producto \n        N de dos números primos grandes, una tarea que se vuelve prácticamente imposible a medida que el tamaño de los primos aumenta.\n\n    Aplicaciones de RSA:\n        RSA se utiliza en una variedad de aplicaciones, como el cifrado de correos electrónicos, la autenticación de sitios web y la firma digital en documentos.",
                "ejemplo_encrypt":"Ejemplo\n\n    1. Generación de Claves:\n\n        Selecciona dos números primos grandes, p y q.\n        Calcula N = p × q.\n        Calcula la función totiente: phi(N) = (p - 1) × (q - 1).\n        Elige un número entero e que sea coprimo con phi(N). Una elección común es e = 65537.\n        La clave pública es (N, e).\n\n    2. Cifrado de \"Hola Mundo!\":\n\n        Mensaje original: \"Hola Mundo!\"\n        Convertir \"Hola Mundo!\" en un número. \n        Una forma de hacerlo es usando el valor ASCII de cada letra y formando un número grande. \n        Por ejemplo, H = 72, o = 111, l = 108, a = 97, espacio = 32, M = 77, u = 117, n = 110, d = 100, o = 111, ! = 33, lo que da el número 72111108197327711711010011133.\n        Cifrar el mensaje: \n        Mensaje cifrado = Mensaje^(e) mod N\n     \n    3. Resultado del Cifrado:\n\n        El mensaje cifrado es un número grande, que luego puede convertirse en una cadena en base 64 para facilitar su manejo y transmisión.\n        \n        Texto cifrado en base 64: \n        59bc7c2b207143f102a308380960afbb7290e516d04e242e17f6b53b98c89860cedb6c50b6bb3c7b8039c01b82ffb712d03b6eb07e444013bb9b1d74ebb791779f51\n        b100bb431b0d02a1285cb4fc4a779f504a81cf5ecfe42da95b04f347c9a0f04874b85e81c105ff10b59a98fa55de0bf81d0491e4faa6250e449e6cb15a6ad871143b\n        4f007117daf88bdbe07651f8ba8266db3ee349f55b751407bdae50e5df61cf48d90b827a91d1b3a46dedfbaa2b2cd75de7452b34a2e2dc3c746e586d2957cd60eeb8\n        d9df62ecddca2c920a63662cd459def5888aa0be2f3a6acd3bf340805dee36b6ebd23efc5d0bdd2c2f3f8572259b73064246608acea0beb27cab\n\n        Aunque está acortado, es un texto inmenso.",
                "ejemplo_decrypt":"    \n    1. Generación de Claves:\n\n        Utiliza las mismas claves generadas en el proceso de cifrado.\n        Calcula la clave privada d, que es el inverso multiplicativo de e módulo phi(N).\n\n    2. Descifrado del Mensaje:\n\n        Mensaje cifrado: Usando el texto encriptado de encima.\n        Descifrar el mensaje: Mensaje descifrado = Mensaje cifrado^(d) modN.\n\n    3. Resultado del Descifrado:\n\n        El proceso de descifrado devuelve un número grande, que luego se convierte de nuevo en el texto original.\n        Convertir el número a texto: Por ejemplo, el número 72111108197327711711010011133 se convierte de nuevo a \"Hola Mundo!\".",
                "reto":"Reto\n\n    Eres un investigador que ha encontrado un mensaje cifrado dejado por un científico pionero en la criptografía. \n    Se cree que este mensaje contiene una fórmula revolucionaria.\n\n    El mensaje cifrado es:\n\n    26c92c4ac04422785e00eb66e9d3825a802d995e321572751ff064e244d708275ced51b0da8def976ad6b4b2f774eba8df67042562a10dfa49d05e1531a7cd42f46bf8fdbfdda8e10b59e010b562518214883433062d4fdb634a2c1223728b646cb72417aea16a0676b8d20525144bb38cd66530407dec30891f596e685814d99fe68b34e2d05f7e3dd5027eee44671d1ffad839d207ce798b4913941413ae577c65ebdd2ec43bf9c8e57cdf2a1de6d33c1c2a4ff339292a8b7375595b8e00a4eccd0e2e2d5bd3a8a446c6d6bca3c82a236ddfd9722055ecf53ef8c1a491d794290842c47e2d7a48183a674da5ec180e7760bc6997c8ed8ac0182adb4afbaf5e\n\n    \"Las llaves están ya guardadas en archivos para facilitarte el trabajo.\""
            },
            "ecc":{
                "historia":"Historia Del Cifrado ECC\n\n    ECC fue introducida en la criptografía en 1985 por Neal Koblitz y Victor S. Miller de manera independiente. \n\n    Se basa en la teoría de curvas elípticas sobre campos finitos y se ha destacado por su eficiencia y seguridad con claves más pequeñas comparadas con otros sistemas como RSA. \n    \n    Su adopción en protocolos de seguridad como SSL/TLS y en criptomonedas como Bitcoin evidencia su importancia en la protección de la información en la era digital. \n    \n    La capacidad de ECC para proporcionar un alto nivel de seguridad con claves más cortas lo ha convertido en una opción atractiva para sistemas donde los recursos son limitados, como dispositivos móviles.",
                "teoria":"Teoría\n\n    ¿Qué es ECC?\n        ECC es un enfoque de criptografía asimétrica que utiliza las propiedades matemáticas de las curvas elípticas sobre campos finitos. \n        Ofrece una seguridad comparable a otros sistemas criptográficos, pero con claves significativamente más cortas.\n\n    ¿Cómo Funciona?\n        ECC se basa en la dificultad de resolver el problema del logaritmo discreto en curvas elípticas, lo que lo hace resistente a métodos de ataque comunes.\n\n    Pasos Clave del ECC:\n\n    1. Generación de Claves:\n        · Selecciona una curva elíptica y un punto base en esa curva.\n        · Genera una clave privada, un número aleatorio.\n        · La clave pública es el punto resultante de multiplicar el punto base por la clave privada.\n    2. Cifrado:\n        · La clave pública del receptor para generar un punto compartido en la curva, que se utiliza para cifrar el mensaje.\n    3. Descifrado:\n        · Usa la clave privada para recuperar el punto compartido y descifrar el mensaje.\n\n    Seguridad de ECC:\n        La seguridad de ECC reside en la dificultad de calcular el logaritmo discreto en curvas elípticas. \n        Esto permite que ECC sea seguro con claves más pequeñas en comparación con sistemas como RSA.\n\n    Aplicaciones de ECC:\n        ECC se utiliza en una variedad de aplicaciones, desde la seguridad de navegadores web hasta criptomonedas. \n        Su eficiencia lo hace ideal para dispositivos con recursos limitados o para aplicaciones que requieren procesos rápidos de cifrado y descifrado.",
                "ejemplo_encrypt":"Ejemplo\n\n    1. Generación de Claves:\n\n        Elige una curva elíptica y un punto base G en esa curva.\n        Genera una clave privada k, que es un número aleatorio.\n        La clave pública P se obtiene multiplicando k por G (es decir, P = k x G).\n\n    2. Cifrado de un Mensaje:\n\n        Mensaje original: \"Hola Mundo!\"\n        Selecciona un número aleatorio r y calcula R = r x G (un punto en la curva).\n        Calcula el punto compartido S = r x P.\n        El mensaje se cifra combinándolo con S.\n        El mensaje cifrado consiste en el punto R y el mensaje cifrado combinado.\n\n    3. Resultado del Cifrado:\n\n        Se obtiene el mensaje cifrado, que incluye el punto R y el texto cifrado.",
                "ejemplo_decrypt":"\n    1. Uso de Claves:\n\n        Utiliza la misma clave privada k y la clave pública P generadas durante el proceso de cifrado.\n\n    2. Descifrado del Mensaje:\n\n        Mensaje cifrado: Supongamos que tienes el mensaje cifrado obtenido del proceso de cifrado de \"Hola Mundo!\", que incluye un punto R y el texto cifrado.\n        Calcula el punto compartido S = k x R (donde k es tu clave privada).\n        Utiliza S para descifrar el mensaje, revirtiendo el proceso de cifrado.\n\n    3. Resultado del Descifrado:\n\n        El proceso de descifrado devuelve el mensaje original.\n        Recuperas \"Hola Mundo!\" tras descifrar el texto cifrado con el punto compartido S.",
                "reto":"Reto\n    \n    Eres un historiador que ha encontrado un mensaje cifrado dejado por un famoso explorador. \n    Se cree que el mensaje contiene coordenadas de un lugar históricamente significativo.\n\n    \"Las claves están guardadas en un archivo para facilitar el ejercicio.\"\n\n    El texto encriptado es:\n    \n    FXnNN+Jfw+bF0s9dR+PjLWjYwiiA0FEsmLRTlNpyGXY+i5ZeL8jN4J6GikV5C+JTSyKKjeSxFXrIdRTHETYj/aojePVoK4wKogeKt9E2qbF+1HDmyig7HcQF4UbDeMdw\n\n    ¡Suerte descifrándolo!"
            }
        }
    }
}